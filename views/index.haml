!!!
%head
  %meta{charset: 'utf-8'}

  %title Echo Graphiti

  %link{href: 'http://fonts.googleapis.com/css?family=Open+Sans:400,700', rel: 'stylesheet', type: 'text/css'}
  %link{href: 'http://fonts.googleapis.com/css?family=Varela+Round', rel: 'stylesheet', type: 'text/css'}
  = stylesheet('/stylesheets/screen.css', media: 'screen, projection')

%body.bp
  #header
    .menu
      %h1
        %a{href: '/'} ECHO
      #view-controls
        %label{for: 'auto-refresh'}
          %input#auto-refresh{:name => 'auto-refresh', :type => 'checkbox', :checked => Graphiti.settings.graphs['auto_refresh']['enabled'], 'data-interval' => Graphiti.settings.graphs['auto_refresh']['interval']}
            Refresh graphs every #{Graphiti.settings.graphs['auto_refresh']['interval']} seconds.

  #container
    #loading-pane.pane
      #loading-spinner
    #dashboards-pane.pane{style: 'display:none;'}
    #graphs-pane.pane{style: 'display:none;'}
    #editor-pane.pane{style: 'display:none;'}
      #graph-preview
        %img{src: '/images/loading.gif'}
        .clear
      #graph-url{style: 'display:none'}
        %input.graph-url{type: 'text', readonly: true}
      #graph-actions
        %ul
          %li.graph-edit
            %h4 Graph
            %button.save.redraw Redraw
            %form.update{"data-action" => '/graphs/:uuid', method: 'put', style: 'display:none'}
              %input.save.main-action{type: 'submit', value: 'Save'}
            %form.save-new{action: '/graphs', method: 'post'}
              %input.save.create{type: 'submit', value: 'Clone'}
          %li.dashboard
            %h4 Dashboards
            .new-dashboard{style: 'display: none'}
              %form{action: '/dashboards', method: 'post'}
                %strong New Dashboard
                %input{type: 'text', size: 10, placeholder: 'Slug', name: 'dashboard[slug]'}
                %input{type: 'text', size: 20, placeholder: 'Title', name: 'dashboard[title]'}
                %input.save{type: 'submit', value: 'Create'}
                %a{rel: 'cancel'} Cancel
            .add-to-dashboard
              %form{action: '/graphs/dashboards', method: 'post'}
                %strong Add to
                %input{type: 'hidden', name: 'uuid'}
                %select{name: 'dashboard'}
                %input.save{type: 'submit', value: 'Save', disabled: 'disabled'}
                %button.save.create{rel: 'create'} Create New
        .clear
      .edit-group{'data-group' => 'options'}
        .edit-head
          %a Options
        .edit-body
          #graph-options
            %form{action: '/graphs/options', method: 'put'}
              .options-group
                %p
                  %label From
                  %input{type: 'text', name: 'options[from]'}
                %p
                  %label Until
                  %input{type: 'text', name: 'options[until]'}
                %p
                  %label Title
                  %input{type: 'text', name: 'options[title]'}
                %p
                  %label Vertical Title
                  %input{type: 'text', name: 'options[vtitle]'}
                %p
                  %label Hide Legend
                  %select{name: 'options[hideLegend]'}
                    %option{value: ''} decide automatically
                    %option{value: 'true'} always hide
                    %option{value: 'false'} always show
              .options-group.last{ style: 'display:none' }
              .clear
              .options-group
                %p
                  %input.save{type: 'submit', value: 'Update JSON'}
        .clear
      .edit-group{'data-group' => 'editor'}
        .edit-head.open
          %a JSON
        .edit-body.open.editor-area
          #editor &nbsp;
        .clear


  #templates{style: 'display:none'}
    .dashboard{style: 'display:none'}
      %a.view
        %h3.title &nbsp;
      %ul.actions
        %li
          %form.delete{method: 'delete', action: '/dashboards/'}
            %input{type: 'submit', value: 'Delete'}
    .graph{style: 'display:none'}
      .desc
        %h3.title &nbsp;
        %ul.actions
          %li
            %form.delete{method: 'delete', action: '/dashboards/'}
              %input{type: 'hidden', name: 'uuid'}
              %input{type: 'hidden', name: 'dashboard'}
              %input{type: 'submit', value: 'Delete'}
          %li
            %a.edit
              %button Edit
      %a.edit
        %img.ggraph{src: '/images/loading.gif'}
    #dashboards-empty.empty
      %h3
        You haven't set up any dashboards yet. Create a
        %a{href: '/graphs/new'} new graph
        and add it to a dashboard.
    #graphs-empty.empty
      %h3
        You haven't set up any graphs yet. Create a
        %a{href: '/graphs/new'} new graph.

  :javascript
    Graphiti = window.Graphiti || {};
    Graphiti.default_graphite_host = "#{settings.graphs['default_graphite_host']}";
    Graphiti.defaultGraph = #{Yajl::Encoder.encode(default_graph)};

  %script{src: '/js/libs/ace/ace.js'}
  %script{src: '/js/libs/ace/mode-json.js'}
  %script{src: '/js/libs/ace/theme-textmate.js'}
  %script{src: '/js/default.js'}
